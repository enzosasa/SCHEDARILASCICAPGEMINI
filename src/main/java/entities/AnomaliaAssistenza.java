package entities;
// Generated Nov 20, 2017 1:22:37 AM by Hibernate Tools 5.1.0.Alpha1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AnomaliaAssistenza generated by hbm2java
 */
@Entity
@Table(name = "anomalia_assistenza", catalog = "rilasci_DB", uniqueConstraints = {
		@UniqueConstraint(columnNames = "cod_severity"), @UniqueConstraint(columnNames = "cod_status"),
		@UniqueConstraint(columnNames = "id_polarion") })
public class AnomaliaAssistenza implements java.io.Serializable {

	private int id;
	private Severity severity;
	private Status status;
	private User user;
	private String idPolarion;
	private String titolo;
	private Integer codResolution;
	private Date dataUpdate;
	private Date dataCreazione;

	public AnomaliaAssistenza() {
	}

	public AnomaliaAssistenza(int id) {
		this.id = id;
	}

	public AnomaliaAssistenza(int id, Severity severity, Status status, User user, String idPolarion, String titolo,
			Integer codResolution, Date dataUpdate, Date dataCreazione) {
		this.id = id;
		this.severity = severity;
		this.status = status;
		this.user = user;
		this.idPolarion = idPolarion;
		this.titolo = titolo;
		this.codResolution = codResolution;
		this.dataUpdate = dataUpdate;
		this.dataCreazione = dataCreazione;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_severity", unique = true)
	public Severity getSeverity() {
		return this.severity;
	}

	public void setSeverity(Severity severity) {
		this.severity = severity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_status", unique = true)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cod_author")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "id_polarion", unique = true, length = 45)
	public String getIdPolarion() {
		return this.idPolarion;
	}

	public void setIdPolarion(String idPolarion) {
		this.idPolarion = idPolarion;
	}

	@Column(name = "titolo", length = 45)
	public String getTitolo() {
		return this.titolo;
	}

	public void setTitolo(String titolo) {
		this.titolo = titolo;
	}

	@Column(name = "cod_resolution")
	public Integer getCodResolution() {
		return this.codResolution;
	}

	public void setCodResolution(Integer codResolution) {
		this.codResolution = codResolution;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data_update", length = 19)
	public Date getDataUpdate() {
		return this.dataUpdate;
	}

	public void setDataUpdate(Date dataUpdate) {
		this.dataUpdate = dataUpdate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data_creazione", length = 19)
	public Date getDataCreazione() {
		return this.dataCreazione;
	}

	public void setDataCreazione(Date dataCreazione) {
		this.dataCreazione = dataCreazione;
	}

}
